{"ast":null,"code":"\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// function SellerPage() {\n//     const [items, setItems] = useState([]);\n\n//     useEffect(() => {\n//         const fetchItems = async () => {\n//             try {\n//                 const token = localStorage.getItem('token');\n//                 const response = await axios.get('http://localhost:3002/seller/items', {\n//                     headers: {\n//                         Authorization: `Bearer ${token}`\n//                     }\n//                 });\n//                 setItems(response.data);\n//             } catch (error) {\n//                 console.error(\"Error fetching seller items:\", error);\n//             }\n//         };\n\n//         fetchItems();\n//     }, []);\n\n//     const handleSell = async (itemId) => {\n//         const token = localStorage.getItem('token');\n//         try {\n//             const response = await axios.patch(`http://localhost:3002/items/sell/${itemId}`, {}, {\n//                 headers: {\n//                     Authorization: `Bearer ${token}`\n//                 }\n//             });\n//             window.location.href = 'http://localhost:3000/seller'\n//             console.log(\"Item sold:\", response.data);\n//         } catch (error) {\n//             console.error(\"Error selling item:\", error);\n//         }\n//     };\n\n//     return (\n//         <div className=\"items-container\">\n//             <h1>Your Items</h1>\n//             {items.length > 0 ? (\n//                 items.map(item => (\n//                     <div key={item.item_id} className=\"item\">\n//                         <h2>{item.name}</h2>\n//                         <p>{item.description}</p>\n//                         <p>Status: {item.status}</p>\n//                         {item.status === 'Requested' && (\n//                             <button onClick={() => handleSell(item.item_id)}>Mark as Sold</button>\n//                         )}\n//                     </div>\n//                 ))\n//             ) : (\n//                 <p>No items available</p>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default SellerPage;\n\n//cu\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// function SellerPage() {\n//     const [items, setItems] = useState([]);\n//     const [editingItem, setEditingItem] = useState(null);\n//     const [editForm, setEditForm] = useState({ name: \"\", description: \"\" });\n\n//     useEffect(() => {\n//         const fetchItems = async () => {\n//             try {\n//                 const token = localStorage.getItem('token');\n//                 const response = await axios.get('http://localhost:3002/seller/items', {\n//                     headers: {\n//                         Authorization: `Bearer ${token}`\n//                     }\n//                 });\n//                 setItems(response.data);\n//             } catch (error) {\n//                 console.error(\"Error fetching seller items:\", error);\n//             }\n//         };\n\n//         fetchItems();\n//     }, []);\n\n//     const handleSell = async (itemId) => {\n//         const token = localStorage.getItem('token');\n//         try {\n//             const response = await axios.patch(`http://localhost:3002/items/sell/${itemId}`, {}, {\n//                 headers: {\n//                     Authorization: `Bearer ${token}`\n//                 }\n//             });\n//             window.location.href = 'http://localhost:3000/seller'\n//             console.log(\"Item sold:\", response.data);\n//         } catch (error) {\n//             console.error(\"Error selling item:\", error);\n//         }\n//     };\n\n//     const handleEdit = (item) => {\n//         setEditingItem(item.item_id);\n//         setEditForm({ name: item.name, description: item.description });\n//     };\n\n//     const handleSaveEdit = async (itemId) => {\n//         const token = localStorage.getItem('token');\n//         try {\n//             const response = await axios.patch(`http://localhost:3002/items/${itemId}`, editForm, {\n//                 headers: {\n//                     Authorization: `Bearer ${token}`\n//                 }\n//             });\n//             setItems(items.map(item => item.item_id === itemId ? response.data : item));\n//             setEditingItem(null);\n//             setEditForm({ name: \"\", description: \"\" });\n//             console.log(\"Item updated:\", response.data);\n//         } catch (error) {\n//             console.error(\"Error updating item:\", error);\n//         }\n//     };\n\n//     const handleDelete = async (itemId) => {\n//         const token = localStorage.getItem('token');\n//         try {\n//             await axios.delete(`http://localhost:3002/items/${itemId}`, {\n//                 headers: {\n//                     Authorization: `Bearer ${token}`\n//                 }\n//             });\n//             setItems(items.filter(item => item.item_id !== itemId));\n//             console.log(\"Item deleted\");\n//         } catch (error) {\n//             console.error(\"Error deleting item:\", error);\n//         }\n//     };\n\n//     return (\n//         <div className=\"items-container\">\n//             <h1>Your Items</h1>\n//             {items.length > 0 ? (\n//                 items.map(item => (\n//                     <div key={item.item_id} className=\"item\">\n//                         {editingItem === item.item_id ? (\n//                             <div>\n//                                 <input\n//                                     type=\"text\"\n//                                     value={editForm.name}\n//                                     onChange={(e) => setEditForm({ ...editForm, name: e.target.value })}\n//                                 />\n//                                 <textarea\n//                                     value={editForm.description}\n//                                     onChange={(e) => setEditForm({ ...editForm, description: e.target.value })}\n//                                 />\n//                                 <button onClick={() => handleSaveEdit(item.item_id)}>Save</button>\n//                                 <button onClick={() => setEditingItem(null)}>Cancel</button>\n//                             </div>\n//                         ) : (\n//                             <div>\n//                                 <h2>{item.name}</h2>\n//                                 <p>{item.description}</p>\n//                                 <p>Status: {item.status}</p>\n//                                 {item.status === 'Requested' && (\n//                                     <div>\n//                                     <button onClick={() => handleSell(item.item_id)}>Mark as Sold</button>\n//                                     <button onClick={() => handleEdit(item)}>Edit</button>\n//                                     <button onClick={() => handleDelete(item.item_id)}>Delete</button>\n//                                     </div>\n//                                 )}\n\n//                             </div>\n//                         )}\n//                     </div>\n//                 ))\n//             ) : (\n//                 <p>No items available</p>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default SellerPage;","map":{"version":3,"names":[],"sources":["C:/Users/sasha/Desktop/React1/studentamenity/src/sellerpage.jsx"],"sourcesContent":["\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// function SellerPage() {\r\n//     const [items, setItems] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         const fetchItems = async () => {\r\n//             try {\r\n//                 const token = localStorage.getItem('token');\r\n//                 const response = await axios.get('http://localhost:3002/seller/items', {\r\n//                     headers: {\r\n//                         Authorization: `Bearer ${token}`\r\n//                     }\r\n//                 });\r\n//                 setItems(response.data);\r\n//             } catch (error) {\r\n//                 console.error(\"Error fetching seller items:\", error);\r\n//             }\r\n//         };\r\n\r\n//         fetchItems();\r\n//     }, []);\r\n\r\n//     const handleSell = async (itemId) => {\r\n//         const token = localStorage.getItem('token');\r\n//         try {\r\n//             const response = await axios.patch(`http://localhost:3002/items/sell/${itemId}`, {}, {\r\n//                 headers: {\r\n//                     Authorization: `Bearer ${token}`\r\n//                 }\r\n//             });\r\n//             window.location.href = 'http://localhost:3000/seller'\r\n//             console.log(\"Item sold:\", response.data);\r\n//         } catch (error) {\r\n//             console.error(\"Error selling item:\", error);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"items-container\">\r\n//             <h1>Your Items</h1>\r\n//             {items.length > 0 ? (\r\n//                 items.map(item => (\r\n//                     <div key={item.item_id} className=\"item\">\r\n//                         <h2>{item.name}</h2>\r\n//                         <p>{item.description}</p>\r\n//                         <p>Status: {item.status}</p>\r\n//                         {item.status === 'Requested' && (\r\n//                             <button onClick={() => handleSell(item.item_id)}>Mark as Sold</button>\r\n//                         )}\r\n//                     </div>\r\n//                 ))\r\n//             ) : (\r\n//                 <p>No items available</p>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default SellerPage;\r\n\r\n\r\n\r\n//cu\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// function SellerPage() {\r\n//     const [items, setItems] = useState([]);\r\n//     const [editingItem, setEditingItem] = useState(null);\r\n//     const [editForm, setEditForm] = useState({ name: \"\", description: \"\" });\r\n\r\n//     useEffect(() => {\r\n//         const fetchItems = async () => {\r\n//             try {\r\n//                 const token = localStorage.getItem('token');\r\n//                 const response = await axios.get('http://localhost:3002/seller/items', {\r\n//                     headers: {\r\n//                         Authorization: `Bearer ${token}`\r\n//                     }\r\n//                 });\r\n//                 setItems(response.data);\r\n//             } catch (error) {\r\n//                 console.error(\"Error fetching seller items:\", error);\r\n//             }\r\n//         };\r\n\r\n//         fetchItems();\r\n//     }, []);\r\n\r\n//     const handleSell = async (itemId) => {\r\n//         const token = localStorage.getItem('token');\r\n//         try {\r\n//             const response = await axios.patch(`http://localhost:3002/items/sell/${itemId}`, {}, {\r\n//                 headers: {\r\n//                     Authorization: `Bearer ${token}`\r\n//                 }\r\n//             });\r\n//             window.location.href = 'http://localhost:3000/seller'\r\n//             console.log(\"Item sold:\", response.data);\r\n//         } catch (error) {\r\n//             console.error(\"Error selling item:\", error);\r\n//         }\r\n//     };\r\n\r\n//     const handleEdit = (item) => {\r\n//         setEditingItem(item.item_id);\r\n//         setEditForm({ name: item.name, description: item.description });\r\n//     };\r\n\r\n//     const handleSaveEdit = async (itemId) => {\r\n//         const token = localStorage.getItem('token');\r\n//         try {\r\n//             const response = await axios.patch(`http://localhost:3002/items/${itemId}`, editForm, {\r\n//                 headers: {\r\n//                     Authorization: `Bearer ${token}`\r\n//                 }\r\n//             });\r\n//             setItems(items.map(item => item.item_id === itemId ? response.data : item));\r\n//             setEditingItem(null);\r\n//             setEditForm({ name: \"\", description: \"\" });\r\n//             console.log(\"Item updated:\", response.data);\r\n//         } catch (error) {\r\n//             console.error(\"Error updating item:\", error);\r\n//         }\r\n//     };\r\n\r\n//     const handleDelete = async (itemId) => {\r\n//         const token = localStorage.getItem('token');\r\n//         try {\r\n//             await axios.delete(`http://localhost:3002/items/${itemId}`, {\r\n//                 headers: {\r\n//                     Authorization: `Bearer ${token}`\r\n//                 }\r\n//             });\r\n//             setItems(items.filter(item => item.item_id !== itemId));\r\n//             console.log(\"Item deleted\");\r\n//         } catch (error) {\r\n//             console.error(\"Error deleting item:\", error);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"items-container\">\r\n//             <h1>Your Items</h1>\r\n//             {items.length > 0 ? (\r\n//                 items.map(item => (\r\n//                     <div key={item.item_id} className=\"item\">\r\n//                         {editingItem === item.item_id ? (\r\n//                             <div>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     value={editForm.name}\r\n//                                     onChange={(e) => setEditForm({ ...editForm, name: e.target.value })}\r\n//                                 />\r\n//                                 <textarea\r\n//                                     value={editForm.description}\r\n//                                     onChange={(e) => setEditForm({ ...editForm, description: e.target.value })}\r\n//                                 />\r\n//                                 <button onClick={() => handleSaveEdit(item.item_id)}>Save</button>\r\n//                                 <button onClick={() => setEditingItem(null)}>Cancel</button>\r\n//                             </div>\r\n//                         ) : (\r\n//                             <div>\r\n//                                 <h2>{item.name}</h2>\r\n//                                 <p>{item.description}</p>\r\n//                                 <p>Status: {item.status}</p>\r\n//                                 {item.status === 'Requested' && (\r\n//                                     <div>\r\n//                                     <button onClick={() => handleSell(item.item_id)}>Mark as Sold</button>\r\n//                                     <button onClick={() => handleEdit(item)}>Edit</button>\r\n//                                     <button onClick={() => handleDelete(item.item_id)}>Delete</button>\r\n//                                     </div>\r\n//                                 )}\r\n\r\n//                             </div>\r\n//                         )}\r\n//                     </div>\r\n//                 ))\r\n//             ) : (\r\n//                 <p>No items available</p>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default SellerPage;\r\n"],"mappings":";;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
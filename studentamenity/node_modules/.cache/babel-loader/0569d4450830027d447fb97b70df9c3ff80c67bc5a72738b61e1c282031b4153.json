{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sasha\\\\Desktop\\\\React1\\\\studentamenity\\\\src\\\\medical.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const CreateAppointment = () => {\n//   const [doctorType, setDoctorType] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [appointmentDate, setAppointmentDate] = useState('');\n//   const [appointment, setAppointment] = useState(null);\n//   const [error, setError] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n\n//     const token = localStorage.getItem('token');\n\n//     try {\n//       const response = await axios.post('http://localhost:3002/appointments', {\n//         doctorType,\n//         description,\n//         appointmentDate\n//       }, {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       setAppointment(response.data.appointment);\n//     } catch (error) {\n//       setError(error.response?.data?.message || 'An error occurred');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Create Appointment</h2>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Doctor Type:\n//           <input type=\"text\" value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required />\n//         </label>\n//         <br />\n//         <label>\n//           Description:\n//           <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\n//         </label>\n//         <br />\n//         <label>\n//           Appointment Date:\n//           <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Pay & Book Appointment</button>\n//       </form>\n//       {appointment && (\n//         <div>\n//           <h3>Appointment Details</h3>\n//           <p>Doctor ID: {appointment.doctor_id}</p>\n//           <p>Description: {appointment.description}</p>\n//           <p>Appointment Date: {appointment.appointment_date}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CreateAppointment;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const CreateAppointment = () => {\n//   const [doctorType, setDoctorType] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [appointmentDate, setAppointmentDate] = useState('');\n//   const [appointment, setAppointment] = useState(null);\n//   const [error, setError] = useState('');\n//   const [doctorTypes, setDoctorTypes] = useState([]);\n\n//   useEffect(() => {\n//     const fetchDoctorTypes = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const response = await axios.get('http://localhost:3002/api/doctor-types');\n//         setDoctorTypes(response.data);\n//       } catch (error) {\n//         console.error('Error fetching doctor types:', error);\n//         setError('Failed to load doctor types');\n//       }\n//     };\n\n//     fetchDoctorTypes();\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n\n//     const token = localStorage.getItem('token');\n\n//     try {\n//       const response = await axios.post('http://localhost:3002/appointments', {\n//         doctorType,\n//         description,\n//         appointmentDate\n//       }, {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       setAppointment(response.data.appointment);\n//     } catch (error) {\n//       setError(error.response?.data?.message || 'An error occurred');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Create Appointment</h2>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Doctor Type:\n//           <select value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required>\n//             <option value=\"\">Select a doctor type</option>\n//             {doctorTypes.map((type) => (\n//               <option key={type.id} value={type.type}>\n//                 {type.type}\n//               </option>\n//             ))}\n//           </select>\n//         </label>\n//         <br />\n//         <label>\n//           Description:\n//           <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\n//         </label>\n//         <br />\n//         <label>\n//           Appointment Date:\n//           <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Pay & Book Appointment</button>\n//       </form>\n//       {appointment && (\n//         <div>\n//           <h3>Appointment Details</h3>\n//           <p>Doctor Type: {appointment.doctor_id}</p>\n//           <p>Description: {appointment.description}</p>\n//           <p>Appointment Date: {appointment.appointment_date}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CreateAppointment;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateAppointment = () => {\n  _s();\n  const [doctorType, setDoctorType] = useState('');\n  const [description, setDescription] = useState('');\n  const [appointmentDate, setAppointmentDate] = useState('');\n  const [appointment, setAppointment] = useState(null);\n  const [error, setError] = useState('');\n  const [doctorTypes, setDoctorTypes] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  useEffect(() => {\n    const fetchDoctorTypes = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:3002/api/doctor-types');\n        setDoctorTypes(response.data);\n      } catch (error) {\n        console.error('Error fetching doctor types:', error);\n        setError('Failed to load doctor types');\n      }\n    };\n    const fetchAppointments = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:3002/api/appointments', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setAppointments(response.data);\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n        setError('Failed to load appointments');\n      }\n    };\n    fetchDoctorTypes();\n    fetchAppointments();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.post('http://localhost:3002/appointments', {\n        doctorType,\n        description,\n        appointmentDate\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setAppointment(response.data.appointment);\n      setAppointments([...appointments, response.data.appointment]);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred');\n    }\n  };\n  const handleCancelAppointment = async appointmentId => {\n    const token = localStorage.getItem('token');\n    try {\n      await axios.delete(`http://localhost:3002/api/appointments/${appointmentId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setAppointments(appointments.filter(app => app.id !== appointmentId));\n    } catch (error) {\n      console.error('Error canceling appointment:', error);\n      setError('Failed to cancel appointment');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Doctor Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: doctorType,\n          onChange: e => setDoctorType(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a doctor type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), doctorTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type.type,\n            children: type.type\n          }, type.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Appointment Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: appointmentDate,\n          onChange: e => setAppointmentDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Pay & Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), appointments.length > 0 ? appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Doctor Type: \", appointment.doctorType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", appointment.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Appointment Date: \", appointment.appointmentDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }, this), appointment.status === 'Scheduled' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCancelAppointment(appointment.id),\n        children: \"Cancel Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 15\n      }, this)]\n    }, appointment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No appointments found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateAppointment, \"4Bmfo+mZkugTAzZrWqEJeGh2iAY=\");\n_c = CreateAppointment;\nexport default CreateAppointment;\nvar _c;\n$RefreshReg$(_c, \"CreateAppointment\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CreateAppointment","_s","doctorType","setDoctorType","description","setDescription","appointmentDate","setAppointmentDate","appointment","setAppointment","error","setError","doctorTypes","setDoctorTypes","appointments","setAppointments","fetchDoctorTypes","token","localStorage","getItem","response","get","data","console","fetchAppointments","headers","handleSubmit","e","preventDefault","post","_error$response","_error$response$data","message","handleCancelAppointment","appointmentId","delete","filter","app","id","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","value","onChange","target","required","map","type","length","status","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sasha/Desktop/React1/studentamenity/src/medical.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const CreateAppointment = () => {\r\n//   const [doctorType, setDoctorType] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [appointmentDate, setAppointmentDate] = useState('');\r\n//   const [appointment, setAppointment] = useState(null);\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3002/appointments', {\r\n//         doctorType,\r\n//         description,\r\n//         appointmentDate\r\n//       }, {\r\n//         headers: {\r\n//           'Authorization': `Bearer ${token}`\r\n//         }\r\n//       });\r\n\r\n//       setAppointment(response.data.appointment);\r\n//     } catch (error) {\r\n//       setError(error.response?.data?.message || 'An error occurred');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Create Appointment</h2>\r\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>\r\n//           Doctor Type:\r\n//           <input type=\"text\" value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Description:\r\n//           <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Appointment Date:\r\n//           <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <button type=\"submit\">Pay & Book Appointment</button>\r\n//       </form>\r\n//       {appointment && (\r\n//         <div>\r\n//           <h3>Appointment Details</h3>\r\n//           <p>Doctor ID: {appointment.doctor_id}</p>\r\n//           <p>Description: {appointment.description}</p>\r\n//           <p>Appointment Date: {appointment.appointment_date}</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateAppointment;\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const CreateAppointment = () => {\r\n//   const [doctorType, setDoctorType] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [appointmentDate, setAppointmentDate] = useState('');\r\n//   const [appointment, setAppointment] = useState(null);\r\n//   const [error, setError] = useState('');\r\n//   const [doctorTypes, setDoctorTypes] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchDoctorTypes = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const response = await axios.get('http://localhost:3002/api/doctor-types');\r\n//         setDoctorTypes(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching doctor types:', error);\r\n//         setError('Failed to load doctor types');\r\n//       }\r\n//     };\r\n\r\n//     fetchDoctorTypes();\r\n//   }, []);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3002/appointments', {\r\n//         doctorType,\r\n//         description,\r\n//         appointmentDate\r\n//       }, {\r\n//         headers: {\r\n//           'Authorization': `Bearer ${token}`\r\n//         }\r\n//       });\r\n\r\n//       setAppointment(response.data.appointment);\r\n//     } catch (error) {\r\n//       setError(error.response?.data?.message || 'An error occurred');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Create Appointment</h2>\r\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>\r\n//           Doctor Type:\r\n//           <select value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required>\r\n//             <option value=\"\">Select a doctor type</option>\r\n//             {doctorTypes.map((type) => (\r\n//               <option key={type.id} value={type.type}>\r\n//                 {type.type}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Description:\r\n//           <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Appointment Date:\r\n//           <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <button type=\"submit\">Pay & Book Appointment</button>\r\n//       </form>\r\n//       {appointment && (\r\n//         <div>\r\n//           <h3>Appointment Details</h3>\r\n//           <p>Doctor Type: {appointment.doctor_id}</p>\r\n//           <p>Description: {appointment.description}</p>\r\n//           <p>Appointment Date: {appointment.appointment_date}</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateAppointment;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CreateAppointment = () => {\r\n  const [doctorType, setDoctorType] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [appointmentDate, setAppointmentDate] = useState('');\r\n  const [appointment, setAppointment] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [doctorTypes, setDoctorTypes] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDoctorTypes = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:3002/api/doctor-types');\r\n        setDoctorTypes(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching doctor types:', error);\r\n        setError('Failed to load doctor types');\r\n      }\r\n    };\r\n\r\n    const fetchAppointments = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:3002/api/appointments', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        setAppointments(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching appointments:', error);\r\n        setError('Failed to load appointments');\r\n      }\r\n    };\r\n\r\n    fetchDoctorTypes();\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3002/appointments', {\r\n        doctorType,\r\n        description,\r\n        appointmentDate\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      setAppointment(response.data.appointment);\r\n      setAppointments([...appointments, response.data.appointment]);\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || 'An error occurred');\r\n    }\r\n  };\r\n\r\n  const handleCancelAppointment = async (appointmentId) => {\r\n    const token = localStorage.getItem('token');\r\n    try {\r\n      await axios.delete(`http://localhost:3002/api/appointments/${appointmentId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      setAppointments(appointments.filter(app => app.id !== appointmentId));\r\n    } catch (error) {\r\n      console.error('Error canceling appointment:', error);\r\n      setError('Failed to cancel appointment');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create Appointment</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Doctor Type:\r\n          <select value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required>\r\n            <option value=\"\">Select a doctor type</option>\r\n            {doctorTypes.map((type) => (\r\n              <option key={type.id} value={type.type}>\r\n                {type.type}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Description:\r\n          <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Appointment Date:\r\n          <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Pay & Book Appointment</button>\r\n      </form>\r\n      <h2>Your Appointments</h2>\r\n      {appointments.length > 0 ? (\r\n        appointments.map((appointment) => (\r\n          <div key={appointment.id}>\r\n            <p>Doctor Type: {appointment.doctorType}</p>\r\n            <p>Description: {appointment.description}</p>\r\n            <p>Appointment Date: {appointment.appointmentDate}</p>\r\n            {appointment.status === 'Scheduled' && (\r\n              <button onClick={() => handleCancelAppointment(appointment.id)}>Cancel Appointment</button>\r\n            )}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No appointments found</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAppointment;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
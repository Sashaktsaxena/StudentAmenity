{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sasha\\\\Desktop\\\\React1\\\\studentamenity\\\\src\\\\loginSeller.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\"\n// import axios from \"axios\"\n\n// import { Link } from 'react-router-dom';\n// // import { useNavigate } from \"react-router-dom\";\n\n// function LoginStud(){\n//     const [responseData, setResponseData] = useState(null);\n//     const [formdata,setdata]=useState({\n//         Id:'',\n//         Passw:''\n\n//     })\n\n//     async function handleSubmit(event) {\n//         event.preventDefault();\n\n//         try {\n//             const response = await axios.post('http://localhost:3002/getlogin', formdata);\n//             console.log(\"Response from backend \", response.data)\n//             console.log(\"sakjfgjh\")\n//             const statusCode = response.status;\n\n//             if (statusCode === 200) {\n//                 console.log(\"login successful\");\n//                 window.location.href='http://localhost:3000/profile';\n//             } else if (statusCode === 401) {\n//                 console.log(\"Redirecting to signup page\");\n//                 window.location.href = 'http://localhost:3000/';\n//             } else {\n//                 console.log(\"Internal error\");\n//             }\n//         } catch (error) {\n//             console.error(\"Error:\", error);\n//             if (error.response && error.response.status === 401) {\n//                 console.log(\"Redirecting to signup page\");\n//                 window.location.href = 'http://localhost:3000/';\n//             } else {\n//                 console.log(\"Other error occurred\");\n//                 // Handle other errors\n//             }\n//         }\n//     }\n\n//     const HandleEvent=(event)=>{\n//         const {name ,value}=event.target;\n//         setdata({...formdata,[name]:value})\n//     }\n//     return (\n//         <div className=\"outer\">\n\n//             <div className=\"inner\">\n//                 <div className=\"head\"><h3>Login Form </h3></div>\n//                 <div className=\"info\">\n//                 <form onSubmit={handleSubmit}>\n//                 <label>StudentID:\n//                     <input type=\"number\" placeholder=\"StudentId\" name=\"Id\" value={formdata.Id} onChange={HandleEvent}/>\n//                 </label>\n//                 <label>Password:\n//                     <input type=\"password\" placeholder=\"Password\" name=\"Passw\" value={formdata.Passw} onChange={HandleEvent}/>\n//                 </label>\n//                 <label>\n//                     <input type='submit'/>\n//                 </label>\n//                 </form>\n//                 <Link to={'/'}><a>Create a new account</a></Link>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n// export default LoginStud;\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { Link } from 'react-router-dom';\n// // import { useHistory } from \"react-router-dom\";\n// import Profile from \"./profile\"; // Import the Profile component\n\n// function LoginStud() {\n//     const [userProfile, setUserProfile] = useState(null);\n//     const [formdata, setdata] = useState({\n//         Id: '',\n//         Passw: ''\n//     });\n//     // const history = useHistory();\n\n//     async function handleSubmit(event) {\n//         event.preventDefault();\n\n//         try {\n//             const response = await axios.post('http://localhost:3002/getlogin', formdata);\n//             console.log(\"Response from backend \", response.data);\n//             const statusCode = response.status;\n\n//             if (statusCode === 200) {\n//                 console.log(\"Login successful\");\n//                 localStorage.setItem('token', response.data.token);\n\n//                 // Fetch user profile information after successful login\n//                 const profileResponse = await axios.get('http://localhost:3002/profile', {\n//                     headers: {\n//                         Authorization: `Bearer ${response.data.token}`\n//                     }\n//                 });\n\n//                 setUserProfile(profileResponse.data); // Set user profile state\n//             } else if (statusCode === 401) {\n//                 console.log(\"Redirecting to signup page\");\n//                 window.location.href = 'http://localhost:3000/';\n//             } else {\n//                 console.log(\"Internal error\");\n//             }\n//         } catch (error) {\n//             console.error(\"Error:\", error);\n//             if (error.response && error.response.status === 401) {\n//                 console.log(\"Redirecting to signup page\");\n//                 window.location.href = 'http://localhost:3000/';\n//             } else {\n//                 console.log(\"Other error occurred\");\n//                 // Handle other errors\n//             }\n//         }\n//     }\n\n//     const HandleEvent = (event) => {\n//         const {name ,value} = event.target;\n//         setdata({...formdata, [name]:value});\n//     };\n\n//     return (\n//         <div className=\"outer\">\n//             <div className=\"inner\">\n//                 <div className=\"head\"><h3>Login Form </h3></div>\n//                 <div className=\"info\">\n//                     <form onSubmit={handleSubmit}>\n//                         <label>StudentID:\n//                             <input type=\"number\" placeholder=\"StudentId\" name=\"Id\" value={formdata.Id} onChange={HandleEvent}/>\n//                         </label>\n//                         <label>Password:\n//                             <input type=\"password\" placeholder=\"Password\" name=\"Passw\" value={formdata.Passw} onChange={HandleEvent}/>\n//                         </label>\n//                         <label>\n//                             <input type='submit'/>\n//                         </label>\n//                     </form>\n//                     <Link to={'/'}><a>Create a new account</a></Link>\n//                 </div>\n//             </div>\n//             {userProfile && <Profile userProfile={userProfile} />} {/* Render Profile component if userProfile is available */}\n//         </div>\n//     );\n// }\n\n// // export default LoginStud;\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// // import { useHistory } from \"react-router-dom\";\n// import userProfile from \"./profile\"; // Import the Profile page component\n\n// function LoginStud() {\n//     const [userProfile, setUserProfile] = useState(null);\n//     const [formdata, setdata] = useState({\n//         Id: '',\n//         Passw: ''\n//     });\n//     // const history = useHistory();\n\n//     async function handleSubmit(event) {\n//         event.preventDefault();\n\n//         try {\n//             const response = await axios.post('http://localhost:3002/getlogin', formdata);\n//             console.log(\"Response from backend \", response.data);\n//             const statusCode = response.status;\n\n//             if (statusCode === 200) {\n//                 console.log(\"Login successful\");\n//                 localStorage.setItem('token', response.data.token);\n\n//                 // Fetch user profile information after successful login\n//                 const profileResponse = await axios.get('http://localhost:3002/profile', {\n//                     headers: {\n//                         Authorization: `Bearer ${response.data.token}`\n//                     }\n//                 });\n\n//                 setUserProfile(profileResponse.data); // Set user profile state\n\n//                 // Redirect to profile page\n//                 window.location.href='http://localhost:3000/profile'\n//             } else if (statusCode === 401) {\n//                 console.log(\"Redirecting to signup page\");\n//                 window.location.href = 'http://localhost:3000/';\n//             } else {\n//                 console.log(\"Internal error\");\n//             }\n//         } catch (error) {\n//             console.error(\"Error:\", error);\n//             if (error.response && error.response.status === 401) {\n//                 console.log(\"Redirecting to signup page\");\n//                 window.location.href = 'http://localhost:3000/';\n//             } else {\n//                 console.log(\"Other error occurred\");\n//                 // Handle other errors\n//             }\n//         }\n//     }\n\n//     const HandleEvent = (event) => {\n//         const {name ,value} = event.target;\n//         setdata({...formdata, [name]:value});\n//     };\n\n//     return (\n//         <div className=\"outer\">\n//             <div className=\"inner\">\n//                 <div className=\"head\"><h3>Login Form </h3></div>\n//                 <div className=\"info\">\n//                     <form onSubmit={handleSubmit}>\n//                         <label>StudentID:\n//                             <input type=\"number\" placeholder=\"StudentId\" name=\"Id\" value={formdata.Id} onChange={HandleEvent}/>\n//                         </label>\n//                         <label>Password:\n//                             <input type=\"password\" placeholder=\"Password\" name=\"Passw\" value={formdata.Passw} onChange={HandleEvent}/>\n//                         </label>\n//                         <label>\n//                             <input type='submit'/>\n//                         </label>\n//                     </form>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default LoginStud;\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { Link } from \"react-router-dom\";\n// // Import the UserProfile component\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faIdCard,  faLock } from '@fortawesome/free-solid-svg-icons';\n// function LoginStud() {\n//     const [userProfile, setUserProfile] = useState(null);\n//     const [formdata, setdata] = useState({\n//         Id: '',\n//         Passw: ''\n//     });\n//     const [isFocused, setIsFocused] = useState(false);\n//     const[isfocussed1,setIsFocused1]=useState(false);\n//     const[iserror,setiserror]=useState();\n//     async function handleSubmit(event) {\n//         event.preventDefault();\n\n//         try {\n//             const response = await axios.post('http://localhost:3002/getlogin', formdata);\n//             console.log(\"Response from backend \", response.data);\n//             const statusCode = response.status;\n\n//             if (statusCode === 200) {\n//                 console.log(\"Login successful\");\n//                 localStorage.setItem('token', response.data.token);\n\n//                 // Fetch user profile information after successful login\n//                 const profileResponse = await axios.get('http://localhost:3002/profile', {\n//                     headers: {\n//                         Authorization: `Bearer ${response.data.token}`\n//                     }\n//                 });\n\n//                 setUserProfile(profileResponse.data); // Set user profile state\n//                 window.location.href = 'http://localhost:3000/profile';\n//             } else if (statusCode === 401) {\n//                 console.log(\"Redirecting to signup page\");\n//                 window.location.href = 'http://localhost:3000/';\n\n//             } else {\n//                 console.log(\"Internal error\");\n//             }\n//         } catch (error) {\n//             console.error(\"Error:\", error);\n//             if (error.response && error.response.status === 401) {\n//                 console.log(\"Redirecting to signup page\");\n//                 window.location.href = 'http://localhost:3000/';\n//             } else {\n//                 console.log(\"Other error occurred\");\n//                 // Handle other errors\n//             }\n//         }\n//     }\n\n//     const HandleEvent = (event) => {\n//         const {name ,value} = event.target;\n//         setdata({...formdata, [name]:value});\n//     };\n//     const handleFocus = () => {\n//         setIsFocused(true);\n//     };\n\n//     const handleBlur = () => {\n//         setIsFocused1(false);\n//     };\n//     return (\n\n//         <div className=\"outer\">\n//         <div className=\"innerleft\">\n//             <div className=\"image\"></div>\n//         </div>\n//         <div className=\"innerright\">\n//             <div className=\"head\"><h1>Student Login Form</h1></div>\n//             <div><h4>Enter the details below</h4></div>\n\n//             <form onSubmit={handleSubmit}>\n//                 <div className={`input-container ${isFocused ? 'focused' : ''}`}>\n//                     <FontAwesomeIcon icon={faIdCard} className=\"icon\" />\n//                     <input type=\"number\" placeholder=\"Enter StudentId\" name=\"Id\" value={formdata.Id} onChange={HandleEvent} onFocus={handleFocus} onBlur={handleBlur} />\n//                 </div>\n\n//                 <div className={`input-container ${isFocused ? 'focused' : ''}`}>\n//                     <FontAwesomeIcon icon={faLock} className=\"icon\" />\n//                     <input type=\"password\" placeholder=\"Enter password\" name=\"Passw\" value={formdata.Passw} onChange={HandleEvent} onFocus={handleFocus} onBlur={handleBlur} />\n//                 </div>\n//                 <div className=\"submit-container\">\n//                     <input type='submit' className=\"submit-button\"  />\n//                 </div>\n//             </form>\n//             <Link to={'/'}><a>Create a new account</a></Link>\n//         </div>\n//     </div>\n//     );\n// }\n\n// export default LoginStud;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faIdCard, faLock } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginStud() {\n  _s();\n  const [userProfile, setUserProfile] = useState(null);\n  const [formdata, setdata] = useState({\n    Id: '',\n    Passw: ''\n  });\n  const [isFocused, setIsFocused] = useState(false);\n  const [iserror, setiserror] = useState('');\n  async function handleSubmit(event) {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3002/getlogin', formdata);\n      console.log(\"Response from backend \", response.data);\n      const statusCode = response.status;\n      if (statusCode === 200) {\n        console.log(\"Login successful\");\n        localStorage.setItem('token', response.data.token);\n        if (response.data.isAdmin) {\n          window.location.href = 'http://localhost:3000/admin';\n        } else {\n          // Fetch user profile information after successful login\n          const profileResponse = await axios.get('http://localhost:3002/profile', {\n            headers: {\n              Authorization: `Bearer ${response.data.token}`\n            }\n          });\n          setUserProfile(profileResponse.data); // Set user profile state\n          window.location.href = 'http://localhost:3000/profile';\n        }\n      } else if (statusCode === 401) {\n        console.log(\"Invalid credentials\");\n        setiserror('Invalid credentials');\n      } else {\n        console.log(\"Internal error\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      if (error.response && error.response.status === 401) {\n        console.log(\"Invalid credentials\");\n        setiserror('Invalid credentials');\n      } else {\n        console.log(\"Other error occurred\");\n        // Handle other errors\n      }\n    }\n  }\n  const HandleEvent = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setdata({\n      ...formdata,\n      [name]: value\n    });\n  };\n  const handleFocus = () => {\n    setIsFocused(true);\n  };\n  const handleBlur = () => {\n    setIsFocused(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"innerleft\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"innerright\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Student Login Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Enter the details below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }, this), iserror && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: iserror\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `input-container ${isFocused ? 'focused' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faIdCard,\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Enter StudentId\",\n            name: \"Id\",\n            value: formdata.Id,\n            onChange: HandleEvent,\n            onFocus: handleFocus,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `input-container ${isFocused ? 'focused' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faLock,\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            name: \"Passw\",\n            value: formdata.Passw,\n            onChange: HandleEvent,\n            onFocus: handleFocus,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"submit-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: '/',\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"Create a new account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: '/reset',\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"Forget password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 417,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginStud, \"j0BFxAaVoHzEo595JGs/5YVJ6bo=\");\n_c = LoginStud;\nexport default LoginStud;\nvar _c;\n$RefreshReg$(_c, \"LoginStud\");","map":{"version":3,"names":["React","useState","axios","Link","FontAwesomeIcon","faIdCard","faLock","jsxDEV","_jsxDEV","LoginStud","_s","userProfile","setUserProfile","formdata","setdata","Id","Passw","isFocused","setIsFocused","iserror","setiserror","handleSubmit","event","preventDefault","response","post","console","log","data","statusCode","status","localStorage","setItem","token","isAdmin","window","location","href","profileResponse","get","headers","Authorization","error","HandleEvent","name","value","target","handleFocus","handleBlur","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","icon","type","placeholder","onChange","onFocus","onBlur","to","_c","$RefreshReg$"],"sources":["C:/Users/sasha/Desktop/React1/studentamenity/src/loginSeller.jsx"],"sourcesContent":["// import React, { useState } from \"react\"\r\n// import axios from \"axios\"\r\n\r\n// import { Link } from 'react-router-dom';\r\n// // import { useNavigate } from \"react-router-dom\";\r\n\r\n// function LoginStud(){\r\n//     const [responseData, setResponseData] = useState(null);\r\n//     const [formdata,setdata]=useState({\r\n//         Id:'',\r\n//         Passw:''\r\n\r\n//     })\r\n\r\n\r\n    \r\n \r\n\r\n//     async function handleSubmit(event) {\r\n//         event.preventDefault();\r\n        \r\n//         try {\r\n//             const response = await axios.post('http://localhost:3002/getlogin', formdata);\r\n//             console.log(\"Response from backend \", response.data)\r\n//             console.log(\"sakjfgjh\")\r\n//             const statusCode = response.status;\r\n    \r\n//             if (statusCode === 200) {\r\n//                 console.log(\"login successful\");\r\n//                 window.location.href='http://localhost:3000/profile';\r\n//             } else if (statusCode === 401) {\r\n//                 console.log(\"Redirecting to signup page\");\r\n//                 window.location.href = 'http://localhost:3000/';\r\n//             } else {\r\n//                 console.log(\"Internal error\");\r\n//             }\r\n//         } catch (error) {\r\n//             console.error(\"Error:\", error);\r\n//             if (error.response && error.response.status === 401) {\r\n//                 console.log(\"Redirecting to signup page\");\r\n//                 window.location.href = 'http://localhost:3000/';\r\n//             } else {\r\n//                 console.log(\"Other error occurred\");\r\n//                 // Handle other errors\r\n//             }\r\n//         }\r\n//     }\r\n    \r\n    \r\n    \r\n//     const HandleEvent=(event)=>{\r\n//         const {name ,value}=event.target;\r\n//         setdata({...formdata,[name]:value})\r\n//     }\r\n//     return (\r\n//         <div className=\"outer\">\r\n            \r\n//             <div className=\"inner\">\r\n//                 <div className=\"head\"><h3>Login Form </h3></div>\r\n//                 <div className=\"info\">\r\n//                 <form onSubmit={handleSubmit}>\r\n//                 <label>StudentID:\r\n//                     <input type=\"number\" placeholder=\"StudentId\" name=\"Id\" value={formdata.Id} onChange={HandleEvent}/>\r\n//                 </label>\r\n//                 <label>Password:\r\n//                     <input type=\"password\" placeholder=\"Password\" name=\"Passw\" value={formdata.Passw} onChange={HandleEvent}/>\r\n//                 </label>\r\n//                 <label>\r\n//                     <input type='submit'/>\r\n//                 </label>\r\n//                 </form>\r\n//                 <Link to={'/'}><a>Create a new account</a></Link>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n// export default LoginStud;\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link } from 'react-router-dom';\r\n// // import { useHistory } from \"react-router-dom\";\r\n// import Profile from \"./profile\"; // Import the Profile component\r\n\r\n// function LoginStud() {\r\n//     const [userProfile, setUserProfile] = useState(null);\r\n//     const [formdata, setdata] = useState({\r\n//         Id: '',\r\n//         Passw: ''\r\n//     });\r\n//     // const history = useHistory();\r\n\r\n//     async function handleSubmit(event) {\r\n//         event.preventDefault();\r\n        \r\n//         try {\r\n//             const response = await axios.post('http://localhost:3002/getlogin', formdata);\r\n//             console.log(\"Response from backend \", response.data);\r\n//             const statusCode = response.status;\r\n    \r\n//             if (statusCode === 200) {\r\n//                 console.log(\"Login successful\");\r\n//                 localStorage.setItem('token', response.data.token);\r\n\r\n//                 // Fetch user profile information after successful login\r\n//                 const profileResponse = await axios.get('http://localhost:3002/profile', {\r\n//                     headers: {\r\n//                         Authorization: `Bearer ${response.data.token}`\r\n//                     }\r\n//                 });\r\n\r\n//                 setUserProfile(profileResponse.data); // Set user profile state\r\n//             } else if (statusCode === 401) {\r\n//                 console.log(\"Redirecting to signup page\");\r\n//                 window.location.href = 'http://localhost:3000/';\r\n//             } else {\r\n//                 console.log(\"Internal error\");\r\n//             }\r\n//         } catch (error) {\r\n//             console.error(\"Error:\", error);\r\n//             if (error.response && error.response.status === 401) {\r\n//                 console.log(\"Redirecting to signup page\");\r\n//                 window.location.href = 'http://localhost:3000/';\r\n//             } else {\r\n//                 console.log(\"Other error occurred\");\r\n//                 // Handle other errors\r\n//             }\r\n//         }\r\n//     }\r\n    \r\n//     const HandleEvent = (event) => {\r\n//         const {name ,value} = event.target;\r\n//         setdata({...formdata, [name]:value});\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"outer\">\r\n//             <div className=\"inner\">\r\n//                 <div className=\"head\"><h3>Login Form </h3></div>\r\n//                 <div className=\"info\">\r\n//                     <form onSubmit={handleSubmit}>\r\n//                         <label>StudentID:\r\n//                             <input type=\"number\" placeholder=\"StudentId\" name=\"Id\" value={formdata.Id} onChange={HandleEvent}/>\r\n//                         </label>\r\n//                         <label>Password:\r\n//                             <input type=\"password\" placeholder=\"Password\" name=\"Passw\" value={formdata.Passw} onChange={HandleEvent}/>\r\n//                         </label>\r\n//                         <label>\r\n//                             <input type='submit'/>\r\n//                         </label>\r\n//                     </form>\r\n//                     <Link to={'/'}><a>Create a new account</a></Link>\r\n//                 </div>\r\n//             </div>\r\n//             {userProfile && <Profile userProfile={userProfile} />} {/* Render Profile component if userProfile is available */}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// // export default LoginStud;\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// // import { useHistory } from \"react-router-dom\";\r\n// import userProfile from \"./profile\"; // Import the Profile page component\r\n\r\n// function LoginStud() {\r\n//     const [userProfile, setUserProfile] = useState(null);\r\n//     const [formdata, setdata] = useState({\r\n//         Id: '',\r\n//         Passw: ''\r\n//     });\r\n//     // const history = useHistory();\r\n\r\n//     async function handleSubmit(event) {\r\n//         event.preventDefault();\r\n        \r\n//         try {\r\n//             const response = await axios.post('http://localhost:3002/getlogin', formdata);\r\n//             console.log(\"Response from backend \", response.data);\r\n//             const statusCode = response.status;\r\n    \r\n//             if (statusCode === 200) {\r\n//                 console.log(\"Login successful\");\r\n//                 localStorage.setItem('token', response.data.token);\r\n\r\n//                 // Fetch user profile information after successful login\r\n//                 const profileResponse = await axios.get('http://localhost:3002/profile', {\r\n//                     headers: {\r\n//                         Authorization: `Bearer ${response.data.token}`\r\n//                     }\r\n//                 });\r\n\r\n//                 setUserProfile(profileResponse.data); // Set user profile state\r\n\r\n//                 // Redirect to profile page\r\n//                 window.location.href='http://localhost:3000/profile'\r\n//             } else if (statusCode === 401) {\r\n//                 console.log(\"Redirecting to signup page\");\r\n//                 window.location.href = 'http://localhost:3000/';\r\n//             } else {\r\n//                 console.log(\"Internal error\");\r\n//             }\r\n//         } catch (error) {\r\n//             console.error(\"Error:\", error);\r\n//             if (error.response && error.response.status === 401) {\r\n//                 console.log(\"Redirecting to signup page\");\r\n//                 window.location.href = 'http://localhost:3000/';\r\n//             } else {\r\n//                 console.log(\"Other error occurred\");\r\n//                 // Handle other errors\r\n//             }\r\n//         }\r\n//     }\r\n    \r\n//     const HandleEvent = (event) => {\r\n//         const {name ,value} = event.target;\r\n//         setdata({...formdata, [name]:value});\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"outer\">\r\n//             <div className=\"inner\">\r\n//                 <div className=\"head\"><h3>Login Form </h3></div>\r\n//                 <div className=\"info\">\r\n//                     <form onSubmit={handleSubmit}>\r\n//                         <label>StudentID:\r\n//                             <input type=\"number\" placeholder=\"StudentId\" name=\"Id\" value={formdata.Id} onChange={HandleEvent}/>\r\n//                         </label>\r\n//                         <label>Password:\r\n//                             <input type=\"password\" placeholder=\"Password\" name=\"Passw\" value={formdata.Passw} onChange={HandleEvent}/>\r\n//                         </label>\r\n//                         <label>\r\n//                             <input type='submit'/>\r\n//                         </label>\r\n//                     </form>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default LoginStud;\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link } from \"react-router-dom\";\r\n// // Import the UserProfile component\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faIdCard,  faLock } from '@fortawesome/free-solid-svg-icons';\r\n// function LoginStud() {\r\n//     const [userProfile, setUserProfile] = useState(null);\r\n//     const [formdata, setdata] = useState({\r\n//         Id: '',\r\n//         Passw: ''\r\n//     });\r\n//     const [isFocused, setIsFocused] = useState(false);\r\n//     const[isfocussed1,setIsFocused1]=useState(false);\r\n//     const[iserror,setiserror]=useState();\r\n//     async function handleSubmit(event) {\r\n//         event.preventDefault();\r\n        \r\n//         try {\r\n//             const response = await axios.post('http://localhost:3002/getlogin', formdata);\r\n//             console.log(\"Response from backend \", response.data);\r\n//             const statusCode = response.status;\r\n    \r\n//             if (statusCode === 200) {\r\n//                 console.log(\"Login successful\");\r\n//                 localStorage.setItem('token', response.data.token);\r\n                \r\n//                 // Fetch user profile information after successful login\r\n//                 const profileResponse = await axios.get('http://localhost:3002/profile', {\r\n//                     headers: {\r\n//                         Authorization: `Bearer ${response.data.token}`\r\n//                     }\r\n//                 });\r\n\r\n//                 setUserProfile(profileResponse.data); // Set user profile state\r\n//                 window.location.href = 'http://localhost:3000/profile';\r\n//             } else if (statusCode === 401) {\r\n//                 console.log(\"Redirecting to signup page\");\r\n//                 window.location.href = 'http://localhost:3000/';\r\n\r\n//             } else {\r\n//                 console.log(\"Internal error\");\r\n//             }\r\n//         } catch (error) {\r\n//             console.error(\"Error:\", error);\r\n//             if (error.response && error.response.status === 401) {\r\n//                 console.log(\"Redirecting to signup page\");\r\n//                 window.location.href = 'http://localhost:3000/';\r\n//             } else {\r\n//                 console.log(\"Other error occurred\");\r\n//                 // Handle other errors\r\n//             }\r\n//         }\r\n//     }\r\n    \r\n//     const HandleEvent = (event) => {\r\n//         const {name ,value} = event.target;\r\n//         setdata({...formdata, [name]:value});\r\n//     };\r\n//     const handleFocus = () => {\r\n//         setIsFocused(true);\r\n//     };\r\n\r\n//     const handleBlur = () => {\r\n//         setIsFocused1(false);\r\n//     };\r\n//     return (\r\n\r\n//         <div className=\"outer\">\r\n//         <div className=\"innerleft\">\r\n//             <div className=\"image\"></div>\r\n//         </div>\r\n//         <div className=\"innerright\">\r\n//             <div className=\"head\"><h1>Student Login Form</h1></div>\r\n//             <div><h4>Enter the details below</h4></div>\r\n       \r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className={`input-container ${isFocused ? 'focused' : ''}`}>\r\n//                     <FontAwesomeIcon icon={faIdCard} className=\"icon\" />\r\n//                     <input type=\"number\" placeholder=\"Enter StudentId\" name=\"Id\" value={formdata.Id} onChange={HandleEvent} onFocus={handleFocus} onBlur={handleBlur} />\r\n//                 </div>\r\n\r\n//                 <div className={`input-container ${isFocused ? 'focused' : ''}`}>\r\n//                     <FontAwesomeIcon icon={faLock} className=\"icon\" />\r\n//                     <input type=\"password\" placeholder=\"Enter password\" name=\"Passw\" value={formdata.Passw} onChange={HandleEvent} onFocus={handleFocus} onBlur={handleBlur} />\r\n//                 </div>\r\n//                 <div className=\"submit-container\">\r\n//                     <input type='submit' className=\"submit-button\"  />\r\n//                 </div>\r\n//             </form>\r\n//             <Link to={'/'}><a>Create a new account</a></Link>\r\n//         </div>\r\n//     </div>\r\n//     );\r\n// }\r\n\r\n// export default LoginStud;\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faIdCard, faLock } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction LoginStud() {\r\n    const [userProfile, setUserProfile] = useState(null);\r\n    const [formdata, setdata] = useState({\r\n        Id: '',\r\n        Passw: ''\r\n    });\r\n    const [isFocused, setIsFocused] = useState(false);\r\n    const [iserror, setiserror] = useState('');\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n        \r\n        try {\r\n            const response = await axios.post('http://localhost:3002/getlogin', formdata);\r\n            console.log(\"Response from backend \", response.data);\r\n            const statusCode = response.status;\r\n    \r\n            if (statusCode === 200) {\r\n                console.log(\"Login successful\");\r\n                localStorage.setItem('token', response.data.token);\r\n                if (response.data.isAdmin) {\r\n                    window.location.href = 'http://localhost:3000/admin';\r\n                }else{\r\n                // Fetch user profile information after successful login\r\n                const profileResponse = await axios.get('http://localhost:3002/profile', {\r\n                    headers: {\r\n                        Authorization: `Bearer ${response.data.token}`\r\n                    }\r\n                });\r\n\r\n                setUserProfile(profileResponse.data); // Set user profile state\r\n                window.location.href = 'http://localhost:3000/profile';\r\n            }\r\n            } else if (statusCode === 401) {\r\n                console.log(\"Invalid credentials\");\r\n                setiserror('Invalid credentials');\r\n            } else {\r\n                console.log(\"Internal error\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n            if (error.response && error.response.status === 401) {\r\n                console.log(\"Invalid credentials\");\r\n                setiserror('Invalid credentials');\r\n            } else {\r\n                console.log(\"Other error occurred\");\r\n                // Handle other errors\r\n            }\r\n        }\r\n    }\r\n    \r\n    const HandleEvent = (event) => {\r\n        const { name, value } = event.target;\r\n        setdata({...formdata, [name]: value});\r\n    };\r\n\r\n    const handleFocus = () => {\r\n        setIsFocused(true);\r\n    };\r\n\r\n    const handleBlur = () => {\r\n        setIsFocused(false);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"outer\">\r\n            <div className=\"innerleft\">\r\n                <div className=\"image\"></div>\r\n            </div>\r\n            <div className=\"innerright\">\r\n                <div className=\"head\"><h1>Student Login Form</h1></div>\r\n                <div><h4>Enter the details below</h4></div>\r\n                {iserror && <div className=\"error\">{iserror}</div>}\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className={`input-container ${isFocused ? 'focused' : ''}`}>\r\n                        <FontAwesomeIcon icon={faIdCard} className=\"icon\" />\r\n                        <input type=\"number\" placeholder=\"Enter StudentId\" name=\"Id\" value={formdata.Id} onChange={HandleEvent} onFocus={handleFocus} onBlur={handleBlur} />\r\n                    </div>\r\n                    <div className={`input-container ${isFocused ? 'focused' : ''}`}>\r\n                        <FontAwesomeIcon icon={faLock} className=\"icon\" />\r\n                        <input type=\"password\" placeholder=\"Enter password\" name=\"Passw\" value={formdata.Passw} onChange={HandleEvent} onFocus={handleFocus} onBlur={handleBlur} />\r\n                    </div>\r\n                    <div className=\"submit-container\">\r\n                        <input type='submit' className=\"submit-button\"  />\r\n                    </div>\r\n                </form>\r\n                <Link to={'/'}><a>Create a new account</a></Link>\r\n                <Link to={'/reset'}><a>Forget password?</a></Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginStud; \r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
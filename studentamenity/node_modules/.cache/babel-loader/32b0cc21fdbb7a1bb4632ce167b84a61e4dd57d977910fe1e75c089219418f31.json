{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sasha\\\\Desktop\\\\React1\\\\studentamenity\\\\src\\\\sell.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import jwt from 'jsonwebtoken';\n\n// function SellItem() {\n//     const [itemData, setItemData] = useState({\n//         name: '',\n//         description: '',\n//     });\n\n//     const handleChange = (event) => {\n//         const { name, value } = event.target;\n//         setItemData({ ...itemData, [name]: value });\n//     };\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         try {\n//             const token = localStorage.getItem('token');\n//             if (!token) {\n//                 throw new Error('No token found');\n//             }\n\n//             const decodedToken = jwt.decode(token);\n//             if (!decodedToken || !decodedToken.userId) {\n//                 throw new Error('Invalid token');\n//             }\n\n//             const sellerId = decodedToken.userId;\n//             const response = await axios.post('http://localhost:3002/sell', { ...itemData, sellerId }, {\n//                 headers: {\n//                     Authorization: `Bearer ${token}`\n//                 }\n//             });\n\n//             console.log('Item sold successfully:', response.data);\n//             // Handle successful sell (e.g., redirect to the buying page)\n//         } catch (error) {\n//             console.error('Error selling item:', error);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Sell an Item</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <input type=\"text\" name=\"name\" placeholder=\"Item Name\" value={itemData.name} onChange={handleChange} required />\n//                 <textarea name=\"description\" placeholder=\"Item Description\" value={itemData.description} onChange={handleChange} required></textarea>\n//                 <button type=\"submit\">Sell Item</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default SellItem;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function SellItem() {\n//     const [itemData, setItemData] = useState({\n//         name: '',\n//         description: '',\n//     });\n\n//     const handleChange = (event) => {\n//         const { name, value } = event.target;\n//         setItemData({ ...itemData, [name]: value });\n//     };\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         try {\n//             const token = localStorage.getItem('token');\n//             if (!token) {\n//                 throw new Error('No token found');\n//             }\n\n//             const response = await axios.post('http://localhost:3002/sell', itemData, {\n//                 headers: {\n//                     Authorization: `Bearer ${token}`\n//                 }\n//             });\n\n//             console.log('Item sold successfully:', response.data);\n//             // Handle successful sell (e.g., redirect to the buying page)\n//         } catch (error) {\n//             console.error('Error selling item:', error);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Sell an Item</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <input type=\"text\" name=\"name\" placeholder=\"Item Name\" value={itemData.name} onChange={handleChange} required />\n//                 <textarea name=\"description\" placeholder=\"Item Description\" value={itemData.description} onChange={handleChange} required></textarea>\n//                 <button type=\"submit\">Sell Item</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default SellItem;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SellerPage() {\n  _s();\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const fetchItems = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:3002/seller/items', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setItems(response.data);\n      } catch (error) {\n        console.error(\"Error fetching seller items:\", error);\n      }\n    };\n    fetchItems();\n  }, []);\n  const handleSell = async itemId => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.patch(`http://localhost:3002/items/sell/${itemId}`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Item sold:\", response.data);\n    } catch (error) {\n      console.error(\"Error selling item:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"items-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), items.length > 0 ? items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", item.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }, this), item.status === 'Requested' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSell(item.item_id),\n        children: \"Mark as Sold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }, this)]\n    }, item.item_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No items available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n}\n_s(SellerPage, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = SellerPage;\nexport default SellerPage;\nvar _c;\n$RefreshReg$(_c, \"SellerPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SellerPage","_s","items","setItems","fetchItems","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","handleSell","itemId","patch","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","name","description","status","onClick","item_id","_c","$RefreshReg$"],"sources":["C:/Users/sasha/Desktop/React1/studentamenity/src/sell.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import jwt from 'jsonwebtoken';\r\n\r\n// function SellItem() {\r\n//     const [itemData, setItemData] = useState({\r\n//         name: '',\r\n//         description: '',\r\n//     });\r\n\r\n//     const handleChange = (event) => {\r\n//         const { name, value } = event.target;\r\n//         setItemData({ ...itemData, [name]: value });\r\n//     };\r\n\r\n//     const handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n//         try {\r\n//             const token = localStorage.getItem('token');\r\n//             if (!token) {\r\n//                 throw new Error('No token found');\r\n//             }\r\n\r\n//             const decodedToken = jwt.decode(token);\r\n//             if (!decodedToken || !decodedToken.userId) {\r\n//                 throw new Error('Invalid token');\r\n//             }\r\n\r\n//             const sellerId = decodedToken.userId;\r\n//             const response = await axios.post('http://localhost:3002/sell', { ...itemData, sellerId }, {\r\n//                 headers: {\r\n//                     Authorization: `Bearer ${token}`\r\n//                 }\r\n//             });\r\n\r\n//             console.log('Item sold successfully:', response.data);\r\n//             // Handle successful sell (e.g., redirect to the buying page)\r\n//         } catch (error) {\r\n//             console.error('Error selling item:', error);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Sell an Item</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <input type=\"text\" name=\"name\" placeholder=\"Item Name\" value={itemData.name} onChange={handleChange} required />\r\n//                 <textarea name=\"description\" placeholder=\"Item Description\" value={itemData.description} onChange={handleChange} required></textarea>\r\n//                 <button type=\"submit\">Sell Item</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default SellItem;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function SellItem() {\r\n//     const [itemData, setItemData] = useState({\r\n//         name: '',\r\n//         description: '',\r\n//     });\r\n\r\n//     const handleChange = (event) => {\r\n//         const { name, value } = event.target;\r\n//         setItemData({ ...itemData, [name]: value });\r\n//     };\r\n\r\n//     const handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n//         try {\r\n//             const token = localStorage.getItem('token');\r\n//             if (!token) {\r\n//                 throw new Error('No token found');\r\n//             }\r\n\r\n//             const response = await axios.post('http://localhost:3002/sell', itemData, {\r\n//                 headers: {\r\n//                     Authorization: `Bearer ${token}`\r\n//                 }\r\n//             });\r\n\r\n//             console.log('Item sold successfully:', response.data);\r\n//             // Handle successful sell (e.g., redirect to the buying page)\r\n//         } catch (error) {\r\n//             console.error('Error selling item:', error);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Sell an Item</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <input type=\"text\" name=\"name\" placeholder=\"Item Name\" value={itemData.name} onChange={handleChange} required />\r\n//                 <textarea name=\"description\" placeholder=\"Item Description\" value={itemData.description} onChange={handleChange} required></textarea>\r\n//                 <button type=\"submit\">Sell Item</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default SellItem;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction SellerPage() {\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const response = await axios.get('http://localhost:3002/seller/items', {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                });\r\n                setItems(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching seller items:\", error);\r\n            }\r\n        };\r\n\r\n        fetchItems();\r\n    }, []);\r\n\r\n    const handleSell = async (itemId) => {\r\n        const token = localStorage.getItem('token');\r\n        try {\r\n            const response = await axios.patch(`http://localhost:3002/items/sell/${itemId}`, {}, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            console.log(\"Item sold:\", response.data);\r\n        } catch (error) {\r\n            console.error(\"Error selling item:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"items-container\">\r\n            <h1>Your Items</h1>\r\n            {items.length > 0 ? (\r\n                items.map(item => (\r\n                    <div key={item.item_id} className=\"item\">\r\n                        <h2>{item.name}</h2>\r\n                        <p>{item.description}</p>\r\n                        <p>Status: {item.status}</p>\r\n                        {item.status === 'Requested' && (\r\n                            <button onClick={() => handleSell(item.item_id)}>Mark as Sold</button>\r\n                        )}\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No items available</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SellerPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
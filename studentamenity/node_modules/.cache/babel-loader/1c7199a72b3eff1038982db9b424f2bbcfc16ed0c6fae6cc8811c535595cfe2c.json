{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const CreateAppointment = () => {\n//   const [doctorType, setDoctorType] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [appointmentDate, setAppointmentDate] = useState('');\n//   const [appointment, setAppointment] = useState(null);\n//   const [error, setError] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n\n//     const token = localStorage.getItem('token');\n\n//     try {\n//       const response = await axios.post('http://localhost:3002/appointments', {\n//         doctorType,\n//         description,\n//         appointmentDate\n//       }, {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       setAppointment(response.data.appointment);\n//     } catch (error) {\n//       setError(error.response?.data?.message || 'An error occurred');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Create Appointment</h2>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Doctor Type:\n//           <input type=\"text\" value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required />\n//         </label>\n//         <br />\n//         <label>\n//           Description:\n//           <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\n//         </label>\n//         <br />\n//         <label>\n//           Appointment Date:\n//           <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Pay & Book Appointment</button>\n//       </form>\n//       {appointment && (\n//         <div>\n//           <h3>Appointment Details</h3>\n//           <p>Doctor ID: {appointment.doctor_id}</p>\n//           <p>Description: {appointment.description}</p>\n//           <p>Appointment Date: {appointment.appointment_date}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CreateAppointment;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const CreateAppointment = () => {\n//   const [doctorType, setDoctorType] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [appointmentDate, setAppointmentDate] = useState('');\n//   const [appointment, setAppointment] = useState(null);\n//   const [error, setError] = useState('');\n//   const [doctorTypes, setDoctorTypes] = useState([]);\n\n//   useEffect(() => {\n//     const fetchDoctorTypes = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const response = await axios.get('http://localhost:3002/api/doctor-types');\n//         setDoctorTypes(response.data);\n//       } catch (error) {\n//         console.error('Error fetching doctor types:', error);\n//         setError('Failed to load doctor types');\n//       }\n//     };\n\n//     fetchDoctorTypes();\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n\n//     const token = localStorage.getItem('token');\n\n//     try {\n//       const response = await axios.post('http://localhost:3002/appointments', {\n//         doctorType,\n//         description,\n//         appointmentDate\n//       }, {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       setAppointment(response.data.appointment);\n//     } catch (error) {\n//       setError(error.response?.data?.message || 'An error occurred');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Create Appointment</h2>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Doctor Type:\n//           <select value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required>\n//             <option value=\"\">Select a doctor type</option>\n//             {doctorTypes.map((type) => (\n//               <option key={type.id} value={type.type}>\n//                 {type.type}\n//               </option>\n//             ))}\n//           </select>\n//         </label>\n//         <br />\n//         <label>\n//           Description:\n//           <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\n//         </label>\n//         <br />\n//         <label>\n//           Appointment Date:\n//           <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Pay & Book Appointment</button>\n//       </form>\n//       {appointment && (\n//         <div>\n//           <h3>Appointment Details</h3>\n//           <p>Doctor Type: {appointment.doctor_id}</p>\n//           <p>Description: {appointment.description}</p>\n//           <p>Appointment Date: {appointment.appointment_date}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CreateAppointment;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const CreateAppointment = () => {\n//   const [doctorType, setDoctorType] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [appointmentDate, setAppointmentDate] = useState('');\n//   const [appointment, setAppointment] = useState(null);\n//   const [error, setError] = useState('');\n//   const [doctorTypes, setDoctorTypes] = useState([]);\n//   const [appointments, setAppointments] = useState([]);\n\n//   useEffect(() => {\n//     const fetchDoctorTypes = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const response = await axios.get('http://localhost:3002/api/doctor-types');\n//         setDoctorTypes(response.data);\n//       } catch (error) {\n//         console.error('Error fetching doctor types:', error);\n//         setError('Failed to load doctor types');\n//       }\n//     };\n\n//     const fetchAppointments = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const response = await axios.get('http://localhost:3002/api/appointments', {\n//           headers: {\n//             'Authorization': `Bearer ${token}`\n//           }\n//         });\n//         setAppointments(response.data);\n//       } catch (error) {\n//         console.error('Error fetching appointments:', error);\n//         setError('Failed to load appointments');\n//       }\n//     };\n\n//     fetchDoctorTypes();\n//     fetchAppointments();\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n\n//     const token = localStorage.getItem('token');\n\n//     try {\n//       const response = await axios.post('http://localhost:3002/appointments', {\n//         doctorType,\n//         description,\n//         appointmentDate\n//       }, {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       setAppointment(response.data.appointment);\n//       setAppointments([...appointments, response.data.appointment]);\n//     } catch (error) {\n//       setError(error.response?.data?.message || 'An error occurred');\n//     }\n//   };\n\n//   const handleCancelAppointment = async (appointmentId) => {\n//     const token = localStorage.getItem('token');\n//     try {\n//       await axios.delete(`http://localhost:3002/api/appointments/${appointmentId}`, {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n//       setAppointments(appointments.filter(app => app.id !== appointmentId));\n//     } catch (error) {\n//       console.error('Error canceling appointment:', error);\n//       setError('Failed to cancel appointment');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Create Appointment</h2>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Doctor Type:\n//           <select value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required>\n//             <option value=\"\">Select a doctor type</option>\n//             {doctorTypes.map((type) => (\n//               <option key={type.id} value={type.type}>\n//                 {type.type}\n//               </option>\n//             ))}\n//           </select>\n//         </label>\n//         <br />\n//         <label>\n//           Description:\n//           <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\n//         </label>\n//         <br />\n//         <label>\n//           Appointment Date:\n//           <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Pay & Book Appointment</button>\n//       </form>\n//       <h2>Your Appointments</h2>\n//       {appointments.length > 0 ? (\n//         appointments.map((appointment) => (\n//           <div key={appointment.id}>\n//             <p>Doctor Type: {appointment.doctor_id}</p>\n//             <p>Description: {appointment.description}</p>\n//             <p>Appointment Date: {appointment.appointment_date}</p>\n//             {appointment.status === 'Scheduled' && (\n//               <button onClick={() => handleCancelAppointment(appointment.id)}>Cancel Appointment</button>\n//             )}\n//           </div>\n//         ))\n//       ) : (\n//         <p>No appointments found</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CreateAppointment;","map":{"version":3,"names":[],"sources":["C:/Users/sasha/Desktop/React1/studentamenity/src/medical.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const CreateAppointment = () => {\r\n//   const [doctorType, setDoctorType] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [appointmentDate, setAppointmentDate] = useState('');\r\n//   const [appointment, setAppointment] = useState(null);\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3002/appointments', {\r\n//         doctorType,\r\n//         description,\r\n//         appointmentDate\r\n//       }, {\r\n//         headers: {\r\n//           'Authorization': `Bearer ${token}`\r\n//         }\r\n//       });\r\n\r\n//       setAppointment(response.data.appointment);\r\n//     } catch (error) {\r\n//       setError(error.response?.data?.message || 'An error occurred');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Create Appointment</h2>\r\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>\r\n//           Doctor Type:\r\n//           <input type=\"text\" value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Description:\r\n//           <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Appointment Date:\r\n//           <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <button type=\"submit\">Pay & Book Appointment</button>\r\n//       </form>\r\n//       {appointment && (\r\n//         <div>\r\n//           <h3>Appointment Details</h3>\r\n//           <p>Doctor ID: {appointment.doctor_id}</p>\r\n//           <p>Description: {appointment.description}</p>\r\n//           <p>Appointment Date: {appointment.appointment_date}</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateAppointment;\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const CreateAppointment = () => {\r\n//   const [doctorType, setDoctorType] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [appointmentDate, setAppointmentDate] = useState('');\r\n//   const [appointment, setAppointment] = useState(null);\r\n//   const [error, setError] = useState('');\r\n//   const [doctorTypes, setDoctorTypes] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchDoctorTypes = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const response = await axios.get('http://localhost:3002/api/doctor-types');\r\n//         setDoctorTypes(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching doctor types:', error);\r\n//         setError('Failed to load doctor types');\r\n//       }\r\n//     };\r\n\r\n//     fetchDoctorTypes();\r\n//   }, []);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3002/appointments', {\r\n//         doctorType,\r\n//         description,\r\n//         appointmentDate\r\n//       }, {\r\n//         headers: {\r\n//           'Authorization': `Bearer ${token}`\r\n//         }\r\n//       });\r\n\r\n//       setAppointment(response.data.appointment);\r\n//     } catch (error) {\r\n//       setError(error.response?.data?.message || 'An error occurred');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Create Appointment</h2>\r\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>\r\n//           Doctor Type:\r\n//           <select value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required>\r\n//             <option value=\"\">Select a doctor type</option>\r\n//             {doctorTypes.map((type) => (\r\n//               <option key={type.id} value={type.type}>\r\n//                 {type.type}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Description:\r\n//           <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Appointment Date:\r\n//           <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <button type=\"submit\">Pay & Book Appointment</button>\r\n//       </form>\r\n//       {appointment && (\r\n//         <div>\r\n//           <h3>Appointment Details</h3>\r\n//           <p>Doctor Type: {appointment.doctor_id}</p>\r\n//           <p>Description: {appointment.description}</p>\r\n//           <p>Appointment Date: {appointment.appointment_date}</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateAppointment;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const CreateAppointment = () => {\r\n//   const [doctorType, setDoctorType] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [appointmentDate, setAppointmentDate] = useState('');\r\n//   const [appointment, setAppointment] = useState(null);\r\n//   const [error, setError] = useState('');\r\n//   const [doctorTypes, setDoctorTypes] = useState([]);\r\n//   const [appointments, setAppointments] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchDoctorTypes = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const response = await axios.get('http://localhost:3002/api/doctor-types');\r\n//         setDoctorTypes(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching doctor types:', error);\r\n//         setError('Failed to load doctor types');\r\n//       }\r\n//     };\r\n\r\n//     const fetchAppointments = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const response = await axios.get('http://localhost:3002/api/appointments', {\r\n//           headers: {\r\n//             'Authorization': `Bearer ${token}`\r\n//           }\r\n//         });\r\n//         setAppointments(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching appointments:', error);\r\n//         setError('Failed to load appointments');\r\n//       }\r\n//     };\r\n\r\n//     fetchDoctorTypes();\r\n//     fetchAppointments();\r\n//   }, []);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3002/appointments', {\r\n//         doctorType,\r\n//         description,\r\n//         appointmentDate\r\n//       }, {\r\n//         headers: {\r\n//           'Authorization': `Bearer ${token}`\r\n//         }\r\n//       });\r\n\r\n//       setAppointment(response.data.appointment);\r\n//       setAppointments([...appointments, response.data.appointment]);\r\n//     } catch (error) {\r\n//       setError(error.response?.data?.message || 'An error occurred');\r\n//     }\r\n//   };\r\n\r\n//   const handleCancelAppointment = async (appointmentId) => {\r\n//     const token = localStorage.getItem('token');\r\n//     try {\r\n//       await axios.delete(`http://localhost:3002/api/appointments/${appointmentId}`, {\r\n//         headers: {\r\n//           'Authorization': `Bearer ${token}`\r\n//         }\r\n//       });\r\n//       setAppointments(appointments.filter(app => app.id !== appointmentId));\r\n//     } catch (error) {\r\n//       console.error('Error canceling appointment:', error);\r\n//       setError('Failed to cancel appointment');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Create Appointment</h2>\r\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>\r\n//           Doctor Type:\r\n//           <select value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required>\r\n//             <option value=\"\">Select a doctor type</option>\r\n//             {doctorTypes.map((type) => (\r\n//               <option key={type.id} value={type.type}>\r\n//                 {type.type}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Description:\r\n//           <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Appointment Date:\r\n//           <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <button type=\"submit\">Pay & Book Appointment</button>\r\n//       </form>\r\n//       <h2>Your Appointments</h2>\r\n//       {appointments.length > 0 ? (\r\n//         appointments.map((appointment) => (\r\n//           <div key={appointment.id}>\r\n//             <p>Doctor Type: {appointment.doctor_id}</p>\r\n//             <p>Description: {appointment.description}</p>\r\n//             <p>Appointment Date: {appointment.appointment_date}</p>\r\n//             {appointment.status === 'Scheduled' && (\r\n//               <button onClick={() => handleCancelAppointment(appointment.id)}>Cancel Appointment</button>\r\n//             )}\r\n//           </div>\r\n//         ))\r\n//       ) : (\r\n//         <p>No appointments found</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateAppointment;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sasha\\\\Desktop\\\\React1\\\\studentamenity\\\\src\\\\medical.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const CreateAppointment = () => {\n//   const [doctorType, setDoctorType] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [appointmentDate, setAppointmentDate] = useState('');\n//   const [appointment, setAppointment] = useState(null);\n//   const [error, setError] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n\n//     const token = localStorage.getItem('token');\n\n//     try {\n//       const response = await axios.post('http://localhost:3002/appointments', {\n//         doctorType,\n//         description,\n//         appointmentDate\n//       }, {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       setAppointment(response.data.appointment);\n//     } catch (error) {\n//       setError(error.response?.data?.message || 'An error occurred');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Create Appointment</h2>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Doctor Type:\n//           <input type=\"text\" value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required />\n//         </label>\n//         <br />\n//         <label>\n//           Description:\n//           <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\n//         </label>\n//         <br />\n//         <label>\n//           Appointment Date:\n//           <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Pay & Book Appointment</button>\n//       </form>\n//       {appointment && (\n//         <div>\n//           <h3>Appointment Details</h3>\n//           <p>Doctor ID: {appointment.doctor_id}</p>\n//           <p>Description: {appointment.description}</p>\n//           <p>Appointment Date: {appointment.appointment_date}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CreateAppointment;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const CreateAppointment = () => {\n//   const [doctorType, setDoctorType] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [appointmentDate, setAppointmentDate] = useState('');\n//   const [appointment, setAppointment] = useState(null);\n//   const [error, setError] = useState('');\n//   const [doctorTypes, setDoctorTypes] = useState([]);\n\n//   useEffect(() => {\n//     const fetchDoctorTypes = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const response = await axios.get('http://localhost:3002/api/doctor-types');\n//         setDoctorTypes(response.data);\n//       } catch (error) {\n//         console.error('Error fetching doctor types:', error);\n//         setError('Failed to load doctor types');\n//       }\n//     };\n\n//     fetchDoctorTypes();\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n\n//     const token = localStorage.getItem('token');\n\n//     try {\n//       const response = await axios.post('http://localhost:3002/appointments', {\n//         doctorType,\n//         description,\n//         appointmentDate\n//       }, {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       setAppointment(response.data.appointment);\n//     } catch (error) {\n//       setError(error.response?.data?.message || 'An error occurred');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Create Appointment</h2>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Doctor Type:\n//           <select value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required>\n//             <option value=\"\">Select a doctor type</option>\n//             {doctorTypes.map((type) => (\n//               <option key={type.id} value={type.type}>\n//                 {type.type}\n//               </option>\n//             ))}\n//           </select>\n//         </label>\n//         <br />\n//         <label>\n//           Description:\n//           <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\n//         </label>\n//         <br />\n//         <label>\n//           Appointment Date:\n//           <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Pay & Book Appointment</button>\n//       </form>\n//       {appointment && (\n//         <div>\n//           <h3>Appointment Details</h3>\n//           <p>Doctor Type: {appointment.doctor_id}</p>\n//           <p>Description: {appointment.description}</p>\n//           <p>Appointment Date: {appointment.appointment_date}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CreateAppointment;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const CreateAppointment = () => {\n//   const [doctorType, setDoctorType] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [appointmentDate, setAppointmentDate] = useState('');\n//   const [appointment, setAppointment] = useState(null);\n//   const [error, setError] = useState('');\n//   const [doctorTypes, setDoctorTypes] = useState([]);\n//   const [appointments, setAppointments] = useState([]);\n\n//   useEffect(() => {\n//     const fetchDoctorTypes = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const response = await axios.get('http://localhost:3002/api/doctor-types');\n//         setDoctorTypes(response.data);\n//       } catch (error) {\n//         console.error('Error fetching doctor types:', error);\n//         setError('Failed to load doctor types');\n//       }\n//     };\n\n//     const fetchAppointments = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const response = await axios.get('http://localhost:3002/api/appointments', {\n//           headers: {\n//             'Authorization': `Bearer ${token}`\n//           }\n//         });\n//         setAppointments(response.data);\n//       } catch (error) {\n//         console.error('Error fetching appointments:', error);\n//         setError('Failed to load appointments');\n//       }\n//     };\n\n//     fetchDoctorTypes();\n//     fetchAppointments();\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n\n//     const token = localStorage.getItem('token');\n\n//     try {\n//       const response = await axios.post('http://localhost:3002/appointments', {\n//         doctorType,\n//         description,\n//         appointmentDate\n//       }, {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       setAppointment(response.data.appointment);\n//       setAppointments([...appointments, response.data.appointment]);\n//     } catch (error) {\n//       setError(error.response?.data?.message || 'An error occurred');\n//     }\n//   };\n\n//   const handleCancelAppointment = async (appointmentId) => {\n//     const token = localStorage.getItem('token');\n//     try {\n//       await axios.delete(`http://localhost:3002/api/appointments/${appointmentId}`, {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n//       setAppointments(appointments.filter(app => app.id !== appointmentId));\n//     } catch (error) {\n//       console.error('Error canceling appointment:', error);\n//       setError('Failed to cancel appointment');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Create Appointment</h2>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Doctor Type:\n//           <select value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required>\n//             <option value=\"\">Select a doctor type</option>\n//             {doctorTypes.map((type) => (\n//               <option key={type.id} value={type.type}>\n//                 {type.type}\n//               </option>\n//             ))}\n//           </select>\n//         </label>\n//         <br />\n//         <label>\n//           Description:\n//           <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\n//         </label>\n//         <br />\n//         <label>\n//           Appointment Date:\n//           <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Pay & Book Appointment</button>\n//       </form>\n//       <h2>Your Appointments</h2>\n//       {appointments.length > 0 ? (\n//         appointments.map((appointment) => (\n//           <div key={appointment.id}>\n//             <p>Doctor Type: {appointment.doctor_id}</p>\n//             <p>Description: {appointment.description}</p>\n//             <p>Appointment Date: {appointment.appointment_date}</p>\n//             {appointment.status === 'Scheduled' && (\n//               <button onClick={() => handleCancelAppointment(appointment.id)}>Cancel Appointment</button>\n//             )}\n//           </div>\n//         ))\n//       ) : (\n//         <p>No appointments found</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CreateAppointment;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateAppointment = () => {\n  _s();\n  const [doctorType, setDoctorType] = useState('');\n  const [description, setDescription] = useState('');\n  const [appointmentDate, setAppointmentDate] = useState('');\n  const [appointment, setAppointment] = useState(null);\n  const [error, setError] = useState('');\n  const [doctorTypes, setDoctorTypes] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [doctorAvailabilities, setDoctorAvailabilities] = useState([]);\n  useEffect(() => {\n    const fetchDoctorTypes = async () => {\n      try {\n        const response = await axios.get('http://localhost:3002/api/doctor-types');\n        setDoctorTypes(response.data);\n      } catch (error) {\n        console.error('Error fetching doctor types:', error);\n        setError('Failed to load doctor types');\n      }\n    };\n    const fetchAppointments = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:3002/api/appointments', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setAppointments(response.data);\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n        setError('Failed to load appointments');\n      }\n    };\n    const fetchDoctorAvailabilities = async () => {\n      try {\n        const response = await axios.get('http://localhost:3002/api/doctor-availabilities');\n        setDoctorAvailabilities(response.data);\n      } catch (error) {\n        console.error('Error fetching doctor availabilities:', error);\n        setError('Failed to load doctor availabilities');\n      }\n    };\n    fetchDoctorTypes();\n    fetchAppointments();\n    fetchDoctorAvailabilities();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.post('http://localhost:3002/appointments', {\n        doctorType,\n        description,\n        appointmentDate\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setAppointment(response.data.appointment);\n      setAppointments([...appointments, response.data.appointment]);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred');\n    }\n  };\n  const handleCancelAppointment = async appointmentId => {\n    const token = localStorage.getItem('token');\n    try {\n      await axios.delete(`http://localhost:3002/api/appointments/${appointmentId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setAppointments(appointments.filter(app => app.id !== appointmentId));\n    } catch (error) {\n      console.error('Error canceling appointment:', error);\n      setError('Failed to cancel appointment');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Doctor Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: doctorType,\n          onChange: e => setDoctorType(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a doctor type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), doctorTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type.type,\n            children: type.type\n          }, type.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Appointment Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: appointmentDate,\n          onChange: e => setAppointmentDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Pay & Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Doctor Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this), doctorAvailabilities.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Doctor Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Specialty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Available Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: doctorAvailabilities.map(availability => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: availability.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: availability.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: availability.availability_start_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: availability.availability_end_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: availability.available_time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 17\n          }, this)]\n        }, availability.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No doctor availability found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this), appointments.length > 0 ? appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Doctor Type: \", appointment.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", appointment.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Appointment Date: \", appointment.appointment_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Doctor Name:\", appointment.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Appointment Time:\", appointment.available_time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 13\n      }, this), appointment.status === 'Scheduled' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCancelAppointment(appointment.id),\n        children: \"Cancel Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 15\n      }, this)]\n    }, appointment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No appointments found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 396,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateAppointment, \"c3kwr/hkvFyS18Qu1DlSzkmfdPk=\");\n_c = CreateAppointment;\nexport default CreateAppointment;\nvar _c;\n$RefreshReg$(_c, \"CreateAppointment\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CreateAppointment","_s","doctorType","setDoctorType","description","setDescription","appointmentDate","setAppointmentDate","appointment","setAppointment","error","setError","doctorTypes","setDoctorTypes","appointments","setAppointments","doctorAvailabilities","setDoctorAvailabilities","fetchDoctorTypes","response","get","data","console","fetchAppointments","token","localStorage","getItem","headers","fetchDoctorAvailabilities","handleSubmit","e","preventDefault","post","_error$response","_error$response$data","message","handleCancelAppointment","appointmentId","delete","filter","app","id","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","value","onChange","target","required","map","type","length","availability","name","availability_start_date","availability_end_date","available_time","appointment_date","status","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sasha/Desktop/React1/studentamenity/src/medical.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const CreateAppointment = () => {\r\n//   const [doctorType, setDoctorType] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [appointmentDate, setAppointmentDate] = useState('');\r\n//   const [appointment, setAppointment] = useState(null);\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3002/appointments', {\r\n//         doctorType,\r\n//         description,\r\n//         appointmentDate\r\n//       }, {\r\n//         headers: {\r\n//           'Authorization': `Bearer ${token}`\r\n//         }\r\n//       });\r\n\r\n//       setAppointment(response.data.appointment);\r\n//     } catch (error) {\r\n//       setError(error.response?.data?.message || 'An error occurred');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Create Appointment</h2>\r\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>\r\n//           Doctor Type:\r\n//           <input type=\"text\" value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Description:\r\n//           <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Appointment Date:\r\n//           <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <button type=\"submit\">Pay & Book Appointment</button>\r\n//       </form>\r\n//       {appointment && (\r\n//         <div>\r\n//           <h3>Appointment Details</h3>\r\n//           <p>Doctor ID: {appointment.doctor_id}</p>\r\n//           <p>Description: {appointment.description}</p>\r\n//           <p>Appointment Date: {appointment.appointment_date}</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateAppointment;\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const CreateAppointment = () => {\r\n//   const [doctorType, setDoctorType] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [appointmentDate, setAppointmentDate] = useState('');\r\n//   const [appointment, setAppointment] = useState(null);\r\n//   const [error, setError] = useState('');\r\n//   const [doctorTypes, setDoctorTypes] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchDoctorTypes = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const response = await axios.get('http://localhost:3002/api/doctor-types');\r\n//         setDoctorTypes(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching doctor types:', error);\r\n//         setError('Failed to load doctor types');\r\n//       }\r\n//     };\r\n\r\n//     fetchDoctorTypes();\r\n//   }, []);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3002/appointments', {\r\n//         doctorType,\r\n//         description,\r\n//         appointmentDate\r\n//       }, {\r\n//         headers: {\r\n//           'Authorization': `Bearer ${token}`\r\n//         }\r\n//       });\r\n\r\n//       setAppointment(response.data.appointment);\r\n//     } catch (error) {\r\n//       setError(error.response?.data?.message || 'An error occurred');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Create Appointment</h2>\r\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>\r\n//           Doctor Type:\r\n//           <select value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required>\r\n//             <option value=\"\">Select a doctor type</option>\r\n//             {doctorTypes.map((type) => (\r\n//               <option key={type.id} value={type.type}>\r\n//                 {type.type}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Description:\r\n//           <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Appointment Date:\r\n//           <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <button type=\"submit\">Pay & Book Appointment</button>\r\n//       </form>\r\n//       {appointment && (\r\n//         <div>\r\n//           <h3>Appointment Details</h3>\r\n//           <p>Doctor Type: {appointment.doctor_id}</p>\r\n//           <p>Description: {appointment.description}</p>\r\n//           <p>Appointment Date: {appointment.appointment_date}</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateAppointment;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const CreateAppointment = () => {\r\n//   const [doctorType, setDoctorType] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [appointmentDate, setAppointmentDate] = useState('');\r\n//   const [appointment, setAppointment] = useState(null);\r\n//   const [error, setError] = useState('');\r\n//   const [doctorTypes, setDoctorTypes] = useState([]);\r\n//   const [appointments, setAppointments] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchDoctorTypes = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const response = await axios.get('http://localhost:3002/api/doctor-types');\r\n//         setDoctorTypes(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching doctor types:', error);\r\n//         setError('Failed to load doctor types');\r\n//       }\r\n//     };\r\n\r\n//     const fetchAppointments = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const response = await axios.get('http://localhost:3002/api/appointments', {\r\n//           headers: {\r\n//             'Authorization': `Bearer ${token}`\r\n//           }\r\n//         });\r\n//         setAppointments(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching appointments:', error);\r\n//         setError('Failed to load appointments');\r\n//       }\r\n//     };\r\n\r\n//     fetchDoctorTypes();\r\n//     fetchAppointments();\r\n//   }, []);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3002/appointments', {\r\n//         doctorType,\r\n//         description,\r\n//         appointmentDate\r\n//       }, {\r\n//         headers: {\r\n//           'Authorization': `Bearer ${token}`\r\n//         }\r\n//       });\r\n\r\n//       setAppointment(response.data.appointment);\r\n//       setAppointments([...appointments, response.data.appointment]);\r\n//     } catch (error) {\r\n//       setError(error.response?.data?.message || 'An error occurred');\r\n//     }\r\n//   };\r\n\r\n//   const handleCancelAppointment = async (appointmentId) => {\r\n//     const token = localStorage.getItem('token');\r\n//     try {\r\n//       await axios.delete(`http://localhost:3002/api/appointments/${appointmentId}`, {\r\n//         headers: {\r\n//           'Authorization': `Bearer ${token}`\r\n//         }\r\n//       });\r\n//       setAppointments(appointments.filter(app => app.id !== appointmentId));\r\n//     } catch (error) {\r\n//       console.error('Error canceling appointment:', error);\r\n//       setError('Failed to cancel appointment');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Create Appointment</h2>\r\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>\r\n//           Doctor Type:\r\n//           <select value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required>\r\n//             <option value=\"\">Select a doctor type</option>\r\n//             {doctorTypes.map((type) => (\r\n//               <option key={type.id} value={type.type}>\r\n//                 {type.type}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Description:\r\n//           <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Appointment Date:\r\n//           <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\r\n//         </label>\r\n//         <br />\r\n//         <button type=\"submit\">Pay & Book Appointment</button>\r\n//       </form>\r\n//       <h2>Your Appointments</h2>\r\n//       {appointments.length > 0 ? (\r\n//         appointments.map((appointment) => (\r\n//           <div key={appointment.id}>\r\n//             <p>Doctor Type: {appointment.doctor_id}</p>\r\n//             <p>Description: {appointment.description}</p>\r\n//             <p>Appointment Date: {appointment.appointment_date}</p>\r\n//             {appointment.status === 'Scheduled' && (\r\n//               <button onClick={() => handleCancelAppointment(appointment.id)}>Cancel Appointment</button>\r\n//             )}\r\n//           </div>\r\n//         ))\r\n//       ) : (\r\n//         <p>No appointments found</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateAppointment;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CreateAppointment = () => {\r\n  const [doctorType, setDoctorType] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [appointmentDate, setAppointmentDate] = useState('');\r\n  const [appointment, setAppointment] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [doctorTypes, setDoctorTypes] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [doctorAvailabilities, setDoctorAvailabilities] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDoctorTypes = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3002/api/doctor-types');\r\n        setDoctorTypes(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching doctor types:', error);\r\n        setError('Failed to load doctor types');\r\n      }\r\n    };\r\n\r\n    const fetchAppointments = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:3002/api/appointments', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        setAppointments(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching appointments:', error);\r\n        setError('Failed to load appointments');\r\n      }\r\n    };\r\n\r\n    const fetchDoctorAvailabilities = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3002/api/doctor-availabilities');\r\n        setDoctorAvailabilities(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching doctor availabilities:', error);\r\n        setError('Failed to load doctor availabilities');\r\n      }\r\n    };\r\n\r\n    fetchDoctorTypes();\r\n    fetchAppointments();\r\n    fetchDoctorAvailabilities();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3002/appointments', {\r\n        doctorType,\r\n        description,\r\n        appointmentDate\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      setAppointment(response.data.appointment);\r\n      setAppointments([...appointments, response.data.appointment]);\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || 'An error occurred');\r\n    }\r\n  };\r\n\r\n  const handleCancelAppointment = async (appointmentId) => {\r\n    const token = localStorage.getItem('token');\r\n    try {\r\n      await axios.delete(`http://localhost:3002/api/appointments/${appointmentId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      setAppointments(appointments.filter(app => app.id !== appointmentId));\r\n    } catch (error) {\r\n      console.error('Error canceling appointment:', error);\r\n      setError('Failed to cancel appointment');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create Appointment</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Doctor Type:\r\n          <select value={doctorType} onChange={(e) => setDoctorType(e.target.value)} required>\r\n            <option value=\"\">Select a doctor type</option>\r\n            {doctorTypes.map((type) => (\r\n              <option key={type.id} value={type.type}>\r\n                {type.type}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Description:\r\n          <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Appointment Date:\r\n          <input type=\"date\" value={appointmentDate} onChange={(e) => setAppointmentDate(e.target.value)} required />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Pay & Book Appointment</button>\r\n      </form>\r\n\r\n      <h2>Doctor Availability</h2>\r\n      {doctorAvailabilities.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Doctor Name</th>\r\n              <th>Specialty</th>\r\n              <th>Start Date</th>\r\n              <th>End Date</th>\r\n              <th>Available Time</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {doctorAvailabilities.map((availability) => (\r\n              <tr key={availability.id}>\r\n                <td>{availability.name}</td>\r\n                <td>{availability.type}</td>\r\n                <td>{availability.availability_start_date}</td>\r\n                <td>{availability.availability_end_date}</td>\r\n                <td>{availability.available_time}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No doctor availability found</p>\r\n      )}\r\n\r\n      <h2>Your Appointments</h2>\r\n      {appointments.length > 0 ? (\r\n        appointments.map((appointment) => (\r\n          <div key={appointment.id}>\r\n            <p>Doctor Type: {appointment.type}</p>\r\n            <p>Description: {appointment.description}</p>\r\n            <p>Appointment Date: {appointment.appointment_date}</p>\r\n            <p>Doctor Name:{appointment.name}</p>\r\n            <p>Appointment Time:{appointment.available_time}</p>\r\n            {appointment.status === 'Scheduled' && (\r\n              <button onClick={() => handleCancelAppointment(appointment.id)}>Cancel Appointment</button>\r\n            )}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No appointments found</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAppointment;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}